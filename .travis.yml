language: cpp

matrix:
  include:

  - name: Ubuntu Linux 20.04, GCC 10, AFL
    os: linux
    dist: focal
    addons:
      apt:
        packages:
          - afl++
          - g++-10
          - libfl-dev
          - ninja-build
    env:
      # let AFL catch crashes via core dumps
      - MATRIX_EVAL="echo core | sudo tee /proc/sys/kernel/core_pattern && CC=gcc-10 && CXX=afl-g++"

      # quit if we succeed exhaustively fuzzing (unlikely)
      - AFL_EXIT_WHEN_DONE=1

      # suppress normal animated UI and use periodic text output
      - AFL_NO_UI=1

      # enable ASan and UBSan
      - CXXFLAGS="-g -fsanitize=address,undefined -fno-sanitize-recover=undefined -O3"

      - CUSTOM_COMMAND="travis_wait 60 ../misc/afl-wrapper.sh"

# This file initially contained entries to test GCC on macOS as well, but I
# could not figure out how to get these working. One show stopper seems to be
# that the available libgmps on macOS all seem to have been built with Clang in
# a way that is ABI-incompatible with linking against GCC-compiled code.

before_install:
  - if [ "$(uname -s)" = "Linux" ]; then travis_retry sudo apt-get -qq update; fi
  - eval "${MATRIX_EVAL}"

script:
  - uname -sr && python3 --version && mkdir build && cd build && cmake -G Ninja .. && cmake --build . && sudo env "PATH=$PATH" cmake --build . -- install && if [ -z "${CUSTOM_COMMAND}" ]; then ../tests/run-tests.py; else eval "${CUSTOM_COMMAND}"; fi
